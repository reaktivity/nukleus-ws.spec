#
# Copyright 2016-2017 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

# TODO: revert this script to use k3po http transport as in k3po http specification once k3po
#       is enhanced to support manifesting this as high-level http

property key ${ws:handshakeKey()}
property writeMask ${ws:randomBytes(4)}
property client126 ${ws:randomBytes(126)}
property newServerAcceptRef  ${nuklei:newReferenceId()} # external

connect await ROUTED_SERVER
        "nukleus://ws/streams/source"
  option nukleus:route ${newServerAcceptRef}
  option nukleus:window 8192
  option nukleus:transmission "duplex"

write nukleus:begin.ext ${http:header(":scheme", "http")}
write nukleus:begin.ext ${http:header(":method", "GET")}
write nukleus:begin.ext ${http:header(":path", "/echo")}
write nukleus:begin.ext ${http:header(":authority", "localhost:8080")}
write nukleus:begin.ext ${http:header("upgrade", "websocket")}
write nukleus:begin.ext ${http:header("connection", "upgrade")}
write nukleus:begin.ext ${http:header("sec-websocket-key", key)}
write nukleus:begin.ext ${http:header("sec-websocket-version", "13")}

read nukleus:begin.ext ${http:header(":status", "101")}
read nukleus:begin.ext ${http:header("upgrade", "websocket")}
read nukleus:begin.ext ${http:header("connection", "upgrade")}
read nukleus:begin.ext ${http:header("sec-websocket-accept", ws:handshakeHash(key))}

connected

write [0x82 0xfe 0x00 0x7e] ${writeMask}
write option mask ${writeMask}
write ${client126}
write option mask [0x00 0x00 0x00 0x00]

read [0x82 0x7e 0x00 0x7e] ${client126}
