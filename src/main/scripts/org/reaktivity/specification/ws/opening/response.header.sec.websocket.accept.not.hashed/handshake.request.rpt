#
# Copyright 2016-2017 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#



property location 'http://localhost:8080/echo'
property newHandshakeKey ${ws:handshakeKey()}
property writeMask ${ws:randomBytes(4)}
property newServerAcceptRef  ${nuklei:newReferenceId()} # external

connect await ROUTED_SERVER
        "nukleus://ws/streams/source"
  option nukleus:route ${newServerAcceptRef}
  option nukleus:window 8192
  option nukleus:transmission "duplex"

#TODO: use regex: /(?!s3pPLMBiTxaQ9kYGzzhZRbK\+xOo=)/ on lines 42, 67 when it will be available
write nukleus:begin.ext ${http:header(":scheme", "http")}
write nukleus:begin.ext ${http:header(":method", "GET")}
write nukleus:begin.ext ${http:header(":path", "/path?query")}
write nukleus:begin.ext ${http:header(":authority", "localhost:8080")}
write nukleus:begin.ext ${http:header("upgrade", "websocket")}
write nukleus:begin.ext ${http:header("connection", "Upgrade")}
write nukleus:begin.ext ${http:header("sec-websocket-key", newHandshakeKey)}
write nukleus:begin.ext ${http:header("sec-websocket-version", "13")}

read nukleus:begin.ext ${http:header(":status", "101")}
read nukleus:begin.ext ${http:header("upgrade", "websocket")}
read nukleus:begin.ext ${http:header("connection", "Upgrade")}
read nukleus:begin.ext ${http:header("sec-websocket-accept", "Mock1")}

connected

write close

connect await ROUTED_SERVER
        "nukleus://ws/streams/source"
  option nukleus:route ${newServerAcceptRef}
  option nukleus:window 8192
  option nukleus:transmission "duplex"

write nukleus:begin.ext ${http:header(":scheme", "http")}
write nukleus:begin.ext ${http:header(":method", "GET")}
write nukleus:begin.ext ${http:header(":path", "/path?query")}
write nukleus:begin.ext ${http:header(":authority", "localhost:8080")}
write nukleus:begin.ext ${http:header("upgrade", "websocket")}
write nukleus:begin.ext ${http:header("connection", "Upgrade")}
write nukleus:begin.ext ${http:header("sec-websocket-key", newHandshakeKey)}
write nukleus:begin.ext ${http:header("sec-websocket-version", "13")}

read nukleus:begin.ext ${http:header(":status", "101")}
read nukleus:begin.ext ${http:header("upgrade", "websocket")}
read nukleus:begin.ext ${http:header("connection", "Upgrade")}
read nukleus:begin.ext ${http:header("sec-websocket-accept", "Mock2")}

connected

write close

#connect "http://localhost:8080/path?query"
#connected
#
#write http:method "GET"
#write http:version "HTTP/1.1"
#write http:header "Host" "localhost:8080"
#write http:header "Upgrade" "websocket"
#write http:header "Connection" "Upgrade"
#write http:header "Sec-WebSocket-Key" "dGhlIHNhbXBsZSBub25jZQ=="
#write http:header "Sec-WebSocket-Version" "13"
#
#read http:status "101" /.+/
#read http:version "HTTP/1.1"
#read http:header "Upgrade" /(?i:websocket)/
#read http:header "Connection" /(?i:Upgrade)/
#read http:header "Sec-WebSocket-Accept" /(?!s3pPLMBiTxaQ9kYGzzhZRbK+xOo=)/

